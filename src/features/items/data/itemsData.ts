import { Item, ItemsData } from "../types/items.types";

// キー（アイテムID）と値（勇者のレベル）の関係
export const heroLevelAndItemRelation: { [key: number]: number } = {
  1: 3,
  2: 6,
  3: 9,
  4: 12,
  5: 15,
  6: 18,
  7: 21,
  8: 24,
  9: 27,
  10: 30,
  11: 33,
  12: 36,
  13: 39,
  14: 42,
  15: 45,
  16: 48,
  17: 51,
  18: 54,
  19: 57,
  20: 60,
  21: 63,
  22: 66,
  23: 69,
  24: 72,
  25: 75,
  26: 80,
  27: 85,
  28: 90,
  29: 95,
  30: 99,
};

// アイテムのタイプ定義
const customItemType: { [key: number]: string } = {
  1: "item", // やくそう
  2: "item", // 骨付きにく
  3: "item", // ポーション
  4: "weapon", // 木の弓
  5: "weapon", // 木の杖
  6: "shield", // 木のたて
  7: "item", // てつの鉱石
  8: "item", // てつの宝石
  9: "weapon", // てつのオノ
  10: "helmet", // てつのかぶと
  11: "shield", // てつのたて
  12: "armor", // てつのよろい
  13: "weapon", // てつのつるぎ
  14: "accessory", // まもりのゆびわ
  15: "item", // きんの鉱石
  16: "item", // きんの宝石
  17: "item", // きんかい
  18: "accessory", // ちからのゆびわ
  19: "item", // ダイヤの鉱石
  20: "item", // ダイヤの宝石
  21: "helmet", // かぜのかぶと
  22: "helmet", // こおりのかぶと
  23: "helmet", // ほのおのかぶと
  24: "item", // きんのカギ
  25: "item", // 賢者の書
  26: "shield", // 勇者の盾
  27: "weapon", // 勇者のつるぎ
  28: "accessory", // 勇者の紋章
  29: "helmet", // 勇者のかぶと
  30: "weapon", // 伝説のつるぎ
};

// カスタムアイテム名の定義
export const customItemNames: { [key: number]: string } = {
  1: "やくそう",
  2: "骨付きにく",
  3: "ポーション",
  4: "木の弓",
  5: "木の杖",
  6: "木のたて",
  7: "てつの鉱石",
  8: "てつの宝石",
  9: "てつのオノ",
  10: "てつのかぶと",
  11: "てつのたて",
  12: "てつのよろい",
  13: "てつのつるぎ",
  14: "まもりのゆびわ",
  15: "きんの鉱石",
  16: "きんの宝石",
  17: "きんかい",
  18: "ちからのゆびわ",
  19: "ダイヤの鉱石",
  20: "ダイヤの宝石",
  21: "かぜのかぶと",
  22: "こおりのかぶと",
  23: "ほのおのかぶと",
  24: "きんのカギ",
  25: "賢者の書",
  26: "勇者の盾",
  27: "勇者のつるぎ",
  28: "勇者の紋章",
  29: "勇者のかぶと",
  30: "伝説のつるぎ",
};

// カスタムアイテム説明文の定義
export const customItemDescriptions: { [key: number]: string } = {
  1: "学習で疲れた体力を回復させるための薬草。",
  2: "空腹を満たす骨付き肉。焼くとさらに美味しくなる。",
  3: "天然のミネラルを豊富に含んだ、美しく清らかな液体。体力を大きく回復する。",
  4: "堅い樹木から丁寧に削り出された狩猟用の弓。軽量で扱いやすく、初心者にも使いやすい。",
  5: "古代の魔法が宿る柔らかな木材から作られた杖。先端の水晶が魔力を増幅させ、初級魔法を効率的に放つことができる。",
  6: "柔軟性と耐久性を兼ね備えた特殊な木から作られた盾。その軽さから素早い動きが可能で、敵の不意打ちから身を守るのに適している。",
  7: "地下深くで何千年もかけて形成された希少な鉄鉱石。純度が高く、上質な鉄製装備を鍛造するための貴重な素材として珍重されている。",
  8: "熟練の職人が鉄を精巧に加工して作り上げた装飾品。その内部には不思議な魔力が宿り、持ち主に僅かな加護を与えるといわれている。",
  9: "鋭い刃と耐久性に優れた柄を持つ鉄製の斧。重量があるため扱いには腕力が必要だが、一撃で太い樹木さえも切り倒す力を秘めている。",
  10: "戦場の衝撃から頭部を守るために設計された頑丈な鉄のかぶと。精密な作りで頭にぴったりとフィットし、長時間の着用でも疲れにくい。",
  11: "高品質の鉄を幾重にも重ねて鍛え上げた堅牢な盾。木の盾と比べて重量はあるが、その分防御力は格段に優れており、強力な一撃でも跳ね返す。",
  12: "巧みな鍛冶職人によって打ち出された鉄の鎧。身体の各部位にぴったりとフィットし、致命的な一撃から着用者を守る頼もしい防具。",
  13: "熟練の刀鍛冶が何日もかけて鍛え上げた鋭利な鉄の剣。バランスの取れた重さと切れ味により、多様な戦闘スタイルに対応できる。",
  14: "古代の魔術師が特殊な金属と魔法の結晶を組み合わせて作り上げた神秘的な指輪。着用者の周りに見えない防御の壁を作り出し、危険から身を守る。",
  15: "山岳地帯の深部にのみ存在する、神秘的な輝きを放つ金の原石。不純物が少なく、高品質な金製品を作るための最高級素材として珍重されている。",
  16: "卓越した技術を持つ職人が、純金を何日もかけて丹念に磨き上げた美しい装飾品。その内部には自然界の魔力が凝縮され、着用者に中程度の魔法耐性を与える。",
  17: "最高品質の金を高温で精製し、特殊な魔法で処理された貴重な金塊。その純度の高さから武器や防具の強化に最適で、市場でも高値で取引される。",
  18: "古の英雄が愛用していたという伝説の指輪。内側に刻まれた古代文字が着用者の筋力を活性化させ、普段より力強く行動できるようになる。",
  19: "世界に数カ所にしか存在しない希少な鉱脈から採掘されるダイヤの原石。その圧倒的な硬度と美しい輝きは、最強の武器や防具を生み出す素材となる。",
  20: "最高級のダイヤモンドから削り出された神秘的な装飾品。内部に強力な魔力を秘めており、着用者の魔法能力を大幅に向上させる効果がある。",
  21: "風の精霊が宿るといわれる軽やかな金属で作られた特別なかぶと。着用者の動きを風のように素早くし、時には周囲に風の障壁を生み出す不思議な力を持つ。",
  22: "永遠に溶けることのない氷の結晶を金属に封じ込めたかぶと。着用者の体温を下げず、敵の炎の攻撃を氷結させる驚異的な力を秘めている。",
  23: "火山の中心部で鍛えられた耐熱金属と炎の精霊の力を宿したかぶと。着用者を炎から守るだけでなく、時には敵に炎の鉄槌を降らせる力を与える。",
  24: "古代文明の遺跡で発見された、謎めいた金色のカギ。どんな扉を開けるためのものかは不明だが、持つ者に幸運をもたらすという言い伝えがある。",
  25: "世界の全ての知識と英知が詰まっているといわれる伝説の書物。その内容は読む人によって変化し、求める知識を与えてくれるという不思議な力を持つ。",
  26: "千年に一度現れるという伝説の勇者のために、神々が天界の金属で作り上げた神聖な盾。七色に輝くその表面はあらゆる物理攻撃を無効化し、持ち主を邪悪な力から守護する。",
  27: "神代の時代に天界から授かったという神秘の金属で鍛冶された勇者の剣。刃は常に光を放ち、邪悪な存在に触れると青白く輝きを増す。どんな硬い鎧や魔法の防御も一太刀で切り裂くという。",
  28: "星の欠片を封じ込めたという勇者の紋章。胸に装着すると、眠っていた勇者の血脈が呼び覚まされ、通常の人間では到底及ばない強さと知恵を引き出す力を持つ。",
  29: "古代の賢者たちが結集し、星の力を注ぎ込んで作り上げたという伝説のかぶと。着用者の周りに神聖なバリアを形成し、あらゆる闇の呪文を無効化する力を持つ。",
  30: "全ての伝説を超える究極の剣。神々の王が自らの魂の一部を込めて創り上げたという。真の勇者の手に握られると、剣身から稲妻が迸り、一振りするだけで雷が天を裂き、大地を揺るがす破壊力を解き放つという...",
};

// レベルに応じて獲得できるアイテムかどうかを判定する関数
export const isAcquiredByHeroLevel = (
  itemId: number,
  heroLevel: number
): boolean => {
  // そのアイテムIDに必要なレベルが設定されているか確認
  const requiredLevel = heroLevelAndItemRelation[itemId];

  // 設定されていない場合、または勇者のレベルが必要レベルに達していない場合はfalse
  if (requiredLevel === undefined || heroLevel < requiredLevel) {
    return false;
  }

  return true;
};

// アイテムのモックデータ生成関数
const generateMockItems = (heroLevel: number = 1): Item[] => {
  return Array(30)
    .fill(null) // 30個のnullを生成
    .map((_, index) => {
      const id = index + 1; // 1から30までのIDを生成
      const acquired = isAcquiredByHeroLevel(id, heroLevel); // 獲得済みアイテムかどうかを判定
      return {
        id,
        name: acquired ? customItemNames[id] : null,
        description: acquired ? customItemDescriptions[id] : null,
        acquired,
        type: customItemType[id] || "item",
      };
    });
};

// 初期状態では仮のレベル1としてアイテムを生成
const initialItems = generateMockItems(1);

// エクスポートするモックデータ
export const itemsData: ItemsData = {
  items: initialItems,
};

// レベルに応じてアイテムデータを更新する関数
export const updateItemsByLevel = (level: number): Item[] => {
  return generateMockItems(level);
};
